//--------------------------------------------//
// ALUNOS: TAGLINE TREICHEL e BRUNO FILLMANN
//--------------------------------------------//

#include "hash.h"

#define MAX_SONS 4 

#define ASTREE_UNKNOWN 0
#define ASTREE_SYMBOL 1

#define ASTREE_PROGRAMA 2

#define ASTREE_CMD_ATRIBUICAO 25
#define ASTREE_CMD_ATRIBUICAO_VETOR 26
#define ASTREE_CMD_IF 27
#define ASTREE_CMD_IF_ELSE 28
#define ASTREE_CMD_FOR 29
#define ASTREE_CMD_FOR_TO 30
#define ASTREE_CMD_READ 31
#define ASTREE_CMD_PRINT 32
#define ASTREE_CMD_RETURN 33

#define ASTREE_VETOR 34
#define ASTREE_CHAMADA_FUNCAO 35
#define ASTREE_EXP_PARENTESES 36
#define ASTREE_NEGACAO 37

#define ASTREE_ADD 38
#define ASTREE_SUB 39
#define ASTREE_MUL 40
#define ASTREE_DIV 41

#define ASTREE_MENOR 42
#define ASTREE_MAIOR 43
#define ASTREE_LE 44
#define ASTREE_GE 45
#define ASTREE_EQ 46
#define ASTREE_NE 47
#define ASTREE_AND 48
#define ASTREE_OR 49

#define ASTREE_ARGUMENTOS 50
#define ASTREE_RESTO_ARGUMENTOS 51
#define ASTREE_LISTA_COMANDOS 52
#define ASTREE_LISTA_DECLARACOES 53
#define ASTREE_DECLARACOES 54
#define ASTREE_COMANDOS 55
#define ASTREE_VARIAVEL 56
#define ASTREE_VETOR_DECLARADO_1 58
#define ASTREE_VETOR_DECLARADO_2 59
#define ASTREE_VETOR_CONTEUDO 60
#define ASTREE_PARAMETROS 61
#define ASTREE_PARAMETROS_RESTO 62

#define ASTREE_INT 63
#define ASTREE_BOOL 64
#define ASTREE_CHAR 65
#define ASTREE_FLOAT 66

#define ASTREE_BLOCO 67
#define ASTREE_VAZIO 68
#define ASTREE_DECLARACAO_FUNCAO 69

typedef struct astree_node
{
	int type; 
	
	HASH_NODE *symbol;
	struct astree_node *son[MAX_SONS];
	
} ASTREE;

ASTREE *astreeCreate(int type, HASH_NODE *symbol, ASTREE *son0, ASTREE *son1, ASTREE *son2, ASTREE *son3);
void astreePrint(ASTREE *node, int level);
void astreeDecompile(ASTREE *astree, int node_father);

